/* Generated By:JavaCC: Do not edit this line. DataQLParserConstants.java */
/*
 * Copyright 2008-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.hasor.data.ql.dsl.parser;
/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DataQLParserConstants {
    /** End of File. */
    int      EOF                    = 0;
    /** RegularExpression Id. */
    int      C_SINGLE_COMMENT       = 1;
    /** RegularExpression Id. */
    int      C_MULTILINE_COMMENT    = 2;
    /** RegularExpression Id. */
    int      SH_SINGLE_COMMENT      = 3;
    /** RegularExpression Id. */
    int      WHITESPACE             = 4;
    /** RegularExpression Id. */
    int      EOL                    = 5;
    /** RegularExpression Id. */
    int      COMMA                  = 6;
    /** RegularExpression Id. */
    int      OPAR                   = 7;
    /** RegularExpression Id. */
    int      CPAR                   = 8;
    /** RegularExpression Id. */
    int      OBRA                   = 9;
    /** RegularExpression Id. */
    int      CBRA                   = 10;
    /** RegularExpression Id. */
    int      OCBR                   = 11;
    /** RegularExpression Id. */
    int      CCBR                   = 12;
    /** RegularExpression Id. */
    int      COLON                  = 13;
    /** RegularExpression Id. */
    int      EQ                     = 14;
    /** RegularExpression Id. */
    int      ELLIPSIS               = 15;
    /** RegularExpression Id. */
    int      QUOTE_SINGLE           = 16;
    /** RegularExpression Id. */
    int      QUOTE_DOUBLE           = 17;
    /** RegularExpression Id. */
    int      FRAGMENT               = 18;
    /** RegularExpression Id. */
    int      ON                     = 19;
    /** RegularExpression Id. */
    int      TRUE                   = 20;
    /** RegularExpression Id. */
    int      FALSE                  = 21;
    /** RegularExpression Id. */
    int      NULL                   = 22;
    /** RegularExpression Id. */
    int      ZERO                   = 23;
    /** RegularExpression Id. */
    int      DIGIT_NONZERO          = 24;
    /** RegularExpression Id. */
    int      DIGIT                  = 25;
    /** RegularExpression Id. */
    int      NUMBER_INTEGER         = 26;
    /** RegularExpression Id. */
    int      NUMBER_DECIMAL         = 27;
    /** RegularExpression Id. */
    int      STRING_SINGLE_EMPTY    = 28;
    /** RegularExpression Id. */
    int      STRING_DOUBLE_EMPTY    = 29;
    /** RegularExpression Id. */
    int      STRING_SINGLE_BODY     = 30;
    /** RegularExpression Id. */
    int      STRING_DOUBLE_BODY     = 31;
    /** RegularExpression Id. */
    int      STRING_SINGLE_NONEMPTY = 32;
    /** RegularExpression Id. */
    int      STRING_DOUBLE_NONEMPTY = 33;
    /** RegularExpression Id. */
    int      NAME_LITERAL           = 34;
    /** Lexical state. */
    int      DEFAULT                = 0;
    /** Literal token values. */
    String[] tokenImage             = { "<EOF>", "<C_SINGLE_COMMENT>", "<C_MULTILINE_COMMENT>", "<SH_SINGLE_COMMENT>", "<WHITESPACE>", "<EOL>", "\",\"", "\"(\"", "\")\"", "\"[\"", "\"]\"", "\"{\"", "\"}\"", "\":\"", "<EQ>", "\"...\"", "\"\\\'\"", "\"\\\"\"", "\"fragment\"", "\"on\"", "\"true\"", "\"false\"", "\"null\"", "\"0\"", "<DIGIT_NONZERO>", "<DIGIT>", "<NUMBER_INTEGER>", "<NUMBER_DECIMAL>", "\"\\\'\\\'\"", "\"\\\"\\\"\"", "<STRING_SINGLE_BODY>", "<STRING_DOUBLE_BODY>", "<STRING_SINGLE_NONEMPTY>", "<STRING_DOUBLE_NONEMPTY>", "<NAME_LITERAL>", "\"%{\"", };
}
